# Monster 子域名配置
# 使用方法：将此配置添加到主 nginx.conf 的 http 块中

# HTTP 重定向到 HTTPS
server {
	listen 80;
	listen [::]:80;
	server_name monster.jackangellucaslabs.top;
	return 301 https://$server_name$request_uri;
}

# HTTPS 服务器
server {
	listen 443 ssl http2;
	listen [::]:443 ssl http2;
	server_name monster.jackangellucaslabs.top;

	# SSL 证书
	ssl_certificate /etc/letsencrypt/live/jackangellucaslabs.top/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/jackangellucaslabs.top/privkey.pem;
	include /etc/letsencrypt/options-ssl-nginx.conf;
	ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

	# 应用目录
	root /var/www/html/monster-root;
	index index.html;

	# React Router 支持
	location / {
		try_files $uri $uri/ /index.html;
		add_header X-Frame-Options "SAMEORIGIN" always;
		add_header X-XSS-Protection "1; mode=block" always;
		add_header X-Content-Type-Options "nosniff" always;
		add_header Referrer-Policy "no-referrer-when-downgrade" always;
		add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
	}

	# 静态资源缓存
	location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
		expires 1y;
		add_header Cache-Control "public, immutable";
		add_header Access-Control-Allow-Origin "*";
	}

	# JSON 数据文件
	location ~* \.json$ {
		expires 1h;
		add_header Cache-Control "public, must-revalidate";
		add_header Content-Type application/json;
	}

	# 日志
	access_log /var/log/nginx/monster_access.log;
	error_log /var/log/nginx/monster_error.log;
}

